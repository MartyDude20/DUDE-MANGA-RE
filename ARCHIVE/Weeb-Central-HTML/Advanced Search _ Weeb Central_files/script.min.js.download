const registerServiceWorker=async()=>{if("serviceWorker"in navigator){const registration=await navigator.serviceWorker.register("/sw.js",{scope:"/",});try{if(registration.installing){console.log("Service worker installing");}else if(registration.waiting){console.log("Service worker installed");}else if(registration.active){console.log("Service worker active");}}catch(error){console.error(`Registration failed with ${error}`);}
navigator.serviceWorker.addEventListener("message",event=>{if(event.data.type==="CACHE_CLEARED"){location.reload(true);}})}};registerServiceWorker()
document.addEventListener("DOMContentLoaded",()=>{FingerprintJS.load().then(fp=>fp.get()).then(result=>{const visitorId=result.visitorId;document.getElementById('visitor-id').value=visitorId;if(navigator.serviceWorker.controller){navigator.serviceWorker.controller.postMessage({type:'SET_VISITOR_ID',visitorId:visitorId});}})
updateDateTimeElements();const quick_search_modal=document.getElementById('quick-search-modal')
if(quick_search_modal){quick_search_modal.addEventListener('shown.bs.modal',()=>{document.getElementById('quick-search-input').focus()})
quick_search_modal.addEventListener('hidden.bs.modal',()=>{document.getElementById("quick-search-input").value="";document.getElementById('quick-search-result').textContent="";})}});document.addEventListener('click',(event)=>{const element=event.target.closest('spoiler');if(element){element.classList.toggle('revealed');}});document.body.addEventListener("htmx:responseError",(event)=>{if(event.detail.xhr.status==401){const auth_modal=document.getElementById("auth_modal");if(auth_modal){auth_modal.showModal();}}});document.body.addEventListener("htmx:afterSwap",(event)=>{updateDateTimeElements();});function toggleSelectedTextWithHtmlTag(elementId,htmlTag){const textarea=document.getElementById(elementId);const{selectionStart:start,selectionEnd:end,value:currentText}=textarea;const beforeText=currentText.slice(0,start);const selectedText=currentText.slice(start,end);const afterText=currentText.slice(end);const tagRegex=new RegExp(`^<${htmlTag}>(.*)<\/${htmlTag}>$`,'i');if(tagRegex.test(selectedText)){const newText=selectedText.replace(tagRegex,'$1');textarea.value=beforeText+newText+afterText;textarea.setSelectionRange(start,start+newText.length);}else{textarea.value=`${beforeText}<${htmlTag}>${selectedText}</${htmlTag}>${afterText}`;textarea.setSelectionRange(start,end+htmlTag.length*2+5);}
textarea.focus();}
function clearQuickSearch(){const quickSearchInput=document.getElementById("quick-search-input");if(quickSearchInput){quickSearchInput.value="";}}
function displayCommentTime(createdAt){const now=dayjs();const createdTime=dayjs(createdAt);const minutes=now.diff(createdTime,'minute');const hours=now.diff(createdTime,'hour');const days=now.diff(createdTime,'day');const currentYear=now.year();const commentYear=createdTime.year();if(minutes<1){return'just now';}else if(hours<1){return`${minutes}m`;}else if(days<1){return`${hours}h`;}else if(days<=2){return`${days}d`;}else if(commentYear<currentYear){return createdTime.format('MMM D, YYYY');}else{return createdTime.format('MMM D');}}
function updateDateTimeElements(){const elements=document.querySelectorAll(".text-datetime");elements.forEach((element)=>{const isoDateTime=element.textContent.trim();if(isoDateTime){const formattedTime=displayCommentTime(isoDateTime);if(formattedTime){element.textContent=formattedTime;element.classList.remove("text-datetime");}}});}
async function likeComment(comment_id,callback){let response=await fetch(`/comments/${comment_id}/like`,{method:'POST',credentials:'include',});if(response?.ok){callback()}
if(response?.status==401){const auth_modal=document.getElementById("auth_modal");if(auth_modal){auth_modal.showModal();}}}
async function unlikeComment(comment_id,callback){let response=await fetch(`/comments/${comment_id}/unlike`,{method:'POST',credentials:'include',});if(response?.ok){callback()}}
function clearCacheLogInOut(){if(navigator.serviceWorker.controller){navigator.serviceWorker.controller.postMessage({type:"CLEAR_CACHE"});}}
function sendAffiliationClick(affiliation_id){navigator.sendBeacon(`/common/views/affiliations/${affiliation_id}`);}
const passwordToggles=document.querySelectorAll('.password-toggle');passwordToggles.forEach(passwordToggle=>{passwordToggle.addEventListener('change',()=>{const isChecked=passwordToggle.checked;passwordToggles.forEach(otherToggle=>{otherToggle.checked=isChecked;});const iconEyes=document.querySelectorAll('.icon-eye');iconEyes.forEach(iconEye=>{iconEye.classList.toggle('hidden',!isChecked);});const iconEyesSlash=document.querySelectorAll('.icon-eye-off');iconEyesSlash.forEach(iconEyeSlash=>{iconEyeSlash.classList.toggle('hidden',isChecked);});const passwordInputs=document.querySelectorAll('.password-input');passwordInputs.forEach(input=>{input.type=isChecked?'text':'password';});});});